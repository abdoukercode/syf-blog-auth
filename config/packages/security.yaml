security:
    encoders:
        Symfony\Component\Security\Core\User\User:
           algorithm: bcrypt
        App\Entity\Author:
            algorithm: bcrypt
    role_hierarchy:
        ROLE_ADMIN:  ROLE_USER


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_memory, db_provider]

        in_memory:
            memory:
                users:
                    admin:
                        password: $2y$13$KLOSwESFVzafr7irwEPcQ.OXmPkGsIQrO3h8E9nrb14WTK3D0eMa6
                        roles: 'ROLE_ADMIN'
        db_provider:
            entity: { class: App\Entity\User, property: username }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            pattern: ^/
            provider: chain_provider
            form_login:
                login_path: login
                check_path: login
            logout: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
